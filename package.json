{
  "name": "dart-build-runner",
  "displayName": "Dart build_runner",
  "description": "Dart build_runner tools in VSCode.",
  "publisher": "mrgnhnt96",
  "version": "1.0.6",
  "engines": {
    "vscode": "^1.55.0"
  },
  "repository": "https://github.com/mrgnhnt96/vscode-dart-build-runner",
  "extensionDependencies": [
    "Dart-Code.dart-code"
  ],
  "categories": [
    "Other"
  ],
  "keywords": [
    "flutter",
    "dart",
    "build",
    "build_runner",
    "pubspec",
    "support",
    "generate"
  ],
  "activationEvents": [
    "onLanguage:dart",
    "workspaceContains:**/pubspec.yaml"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": [
      {
        "title": "Dart Build Runner",
        "properties": {
          "dbr.useFlutterForBuildRunner": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "If true, flutter will be used to run build_runner."
          }
        }
      }
    ],
    "commands": [
      {
        "category": "dart-build-runner",
        "command": "dart-build-runner.build",
        "title": "Build",
        "icon": "$(play)"
      },
      {
        "category": "dart-build-runner",
        "command": "dart-build-runner.watch",
        "title": "Watch",
        "icon": "$(sync)"
      },
      {
        "category": "dart-build-runner",
        "command": "dart-build-runner.clean-build",
        "title": "Clear build_runner Cache"
      },
      {
        "category": "dart-build-runner",
        "command": "dart-build-runner.terminate",
        "title": "Terminate",
        "icon": "$(debug-stop)"
      },
      {
        "category": "dart-build-runner",
        "command": "dart-build-runner.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "category": "dart-build-runner",
        "command": "dart-build-runner.open-terminal",
        "title": "Open in Terminal"
      },
      {
        "category": "dart-build-runner",
        "command": "dart-build-runner.get-dependencies",
        "title": "Get Dependencies",
        "icon": "$(package)"
      },
      {
        "category": "dart-build-runner",
        "command": "dart-build-runner.upgrade-dependencies",
        "title": "Upgrade Dependencies"
      },
      {
        "category": "dart-build-runner",
        "command": "dart-build-runner.upgrade-dependencies-major",
        "title": "Upgrade Dependencies (Major)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "dart-build-runner.watch",
          "when": "false"
        },
        {
          "command": "dart-build-runner.build",
          "when": "false"
        },
        {
          "command": "dart-build-runner.clean-build",
          "when": "false"
        },
        {
          "command": "dart-build-runner.terminate",
          "when": "false"
        },
        {
          "command": "dart-build-runner.refresh",
          "when": "false"
        },
        {
          "command": "dart-build-runner.open-terminal",
          "when": "false"
        },
        {
          "command": "dart-build-runner.get-dependencies",
          "when": "false"
        },
        {
          "command": "dart-build-runner.upgrade-dependencies",
          "when": "false"
        },
        {
          "command": "dart-build-runner.upgrade-dependencies-major",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "dart-build-runner.get-dependencies",
          "when": "view == dbr-view",
          "group": "navigation@1"
        },
        {
          "command": "dart-build-runner.refresh",
          "when": "view == dbr-view",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "dart-build-runner.build",
          "when": "view == dbr-view && viewItem in dbr.hasBuildRunnerDep && viewItem in dbr.notRunning",
          "group": "inline"
        },
        {
          "command": "dart-build-runner.watch",
          "when": "view == dbr-view && viewItem in dbr.hasBuildRunnerDep && viewItem in dbr.notRunning",
          "group": "inline"
        },
        {
          "command": "dart-build-runner.get-dependencies",
          "when": "view == dbr-view",
          "group": "inline@3"
        },
        {
          "command": "dart-build-runner.upgrade-dependencies",
          "when": "view == dbr-view && file in viewItem",
          "group": "@2"
        },
        {
          "command": "dart-build-runner.upgrade-dependencies-major",
          "when": "view == dbr-view && file in viewItem",
          "group": "@2"
        },
        {
          "command": "dart-build-runner.terminate",
          "when": "view == dbr-view && viewItem in dbr.running",
          "group": "inline"
        },
        {
          "command": "dart-build-runner.clean-build",
          "when": "view == dbr-view && file in viewItem",
          "group": "@3"
        },
        {
          "command": "dart-build-runner.open-terminal",
          "when": "view == dbr-view",
          "group": "@1"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "dbr-view",
          "name": "BUILD RUNNER - PROJECTS"
        }
      ]
    }
  },
  "scripts": {
    "publish": "vsce publish",
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "pretest": "npm run test-compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "^14.14.37",
    "@types/vscode": "^1.61.0",
    "@typescript-eslint/eslint-plugin": "^4.22.0",
    "@typescript-eslint/parser": "^4.22.0",
    "eslint": "^7.24.0",
    "glob": "^7.1.6",
    "mocha": "^8.3.2",
    "prettier": "^2.2.1",
    "ts-loader": "^8.1.0",
    "typescript": "^4.2.4",
    "vsce": "^1.87.1",
    "vscode-test": "^1.5.2",
    "webpack": "^5.31.2",
    "webpack-cli": "^4.6.0"
  },
  "dependencies": {
    "pidtree": "^0.5.0",
    "yaml": "^1.10.2"
  }
}
