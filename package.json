{
  "name": "dart-support",
  "displayName": "Dart Support",
  "description": "Quick actions for dart projects, pubspec.yaml deps & build_runner",
  "publisher": "mrgnhnt96",
  "author": "Morgan Hunt <mrgnhnt96@gmail.com>",
  "homepage": "https://github.com/mrgnhnt96/vscode-dart-support#readme",
  "bugs": {
    "url": "https://github.com/mrgnhnt96/vscode-dart-support/issues"
  },
  "version": "0.0.2",
  "engines": {
    "vscode": "^1.61.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mrgnhnt96/vscode-dart-support"
  },
  "license": "MIT",
  "extensionDependencies": [
    "Dart-Code.dart-code"
  ],
  "categories": [
    "Other"
  ],
  "keywords": [
    "flutter",
    "dart",
    "build",
    "build_runner",
    "pubspec",
    "support",
    "generate"
  ],
  "activationEvents": [
    "onLanguage:dart",
    "workspaceContains:**/pubspec.{yaml,yml}"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": [
      {
        "title": "Build Runner",
        "properties": {
          "dart-support.useFlutterForCommands": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, flutter will be used to run pub commands."
          }
        }
      },
      {
        "title": "Close Terminals",
        "properties": {
          "dart-support.closeTerminalsAfterUse.individual": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "If true, the psuedo terminal (triggered by a file), will close when the command has completed."
          },
          "dart-support.closeTerminalsAfterUse.group": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "If true, psuedo terminals (triggered by folders or the 'PROJECT PUBSPECS' pane), will close when the command has completed."
          }
        }
      }
    ],
    "commands": [
      {
        "category": "dart-support",
        "command": "dart-support.build",
        "title": "build_runner: Build",
        "icon": "$(play)"
      },
      {
        "category": "dart-support",
        "command": "dart-support.watch",
        "title": "build_runner: Watch",
        "icon": "$(sync)"
      },
      {
        "category": "dart-support",
        "command": "dart-support.clean-build",
        "title": "build_runner: Clear Cache"
      },
      {
        "category": "dart-support",
        "command": "dart-support.terminate",
        "title": "Terminate",
        "icon": "$(debug-stop)"
      },
      {
        "category": "dart-support",
        "command": "dart-support.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "category": "dart-support",
        "command": "dart-support.open-terminal",
        "title": "Open in Terminal"
      },
      {
        "category": "dart-support",
        "command": "dart-support.get-dependencies",
        "title": "Get Dependencies",
        "icon": "$(package)"
      },
      {
        "category": "dart-support",
        "command": "dart-support.upgrade-dependencies",
        "title": "Upgrade Dependencies"
      },
      {
        "category": "dart-support",
        "command": "dart-support.upgrade-dependencies-major",
        "title": "Upgrade Dependencies (Major)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "dart-support.watch",
          "when": "false"
        },
        {
          "command": "dart-support.build",
          "when": "false"
        },
        {
          "command": "dart-support.clean-build",
          "when": "false"
        },
        {
          "command": "dart-support.terminate",
          "when": "false"
        },
        {
          "command": "dart-support.refresh",
          "when": "false"
        },
        {
          "command": "dart-support.open-terminal",
          "when": "false"
        },
        {
          "command": "dart-support.get-dependencies",
          "when": "false"
        },
        {
          "command": "dart-support.upgrade-dependencies",
          "when": "false"
        },
        {
          "command": "dart-support.upgrade-dependencies-major",
          "when": "false"
        }
      ],
      "explorer/context": [
        {
          "command": "dart-support.build",
          "group": "dart-support@1",
          "when": "explorerResourceIsFolder || resourceLangId == dart"
        },
        {
          "command": "dart-support.watch",
          "group": "dart-support@2",
          "when": "explorerResourceIsFolder || resourceLangId == dart"
        },
        {
          "command": "dart-support.clean-build",
          "group": "dart-support@3",
          "when": "explorerResourceIsFolder || resourceLangId == dart"
        }
      ],
      "view/title": [
        {
          "command": "dart-support.get-dependencies",
          "when": "view == dart-support-view",
          "group": "navigation@1"
        },
        {
          "command": "dart-support.refresh",
          "when": "view == dart-support-view",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "dart-support.build",
          "when": "view == dart-support-view && viewItem in dart-support.hasBuildRunnerDep && viewItem in dart-support.notRunning",
          "group": "inline@0"
        },
        {
          "command": "dart-support.watch",
          "when": "view == dart-support-view && viewItem in dart-support.hasBuildRunnerDep && viewItem in dart-support.notRunning",
          "group": "inline@1"
        },
        {
          "command": "dart-support.get-dependencies",
          "when": "view == dart-support-view && viewItem in dart-support.notRunning",
          "group": "inline@2"
        },
        {
          "command": "dart-support.terminate",
          "when": "view == dart-support-view && viewItem in dart-support.running",
          "group": "inline@3"
        },
        {
          "command": "dart-support.get-dependencies",
          "when": "view == dart-support-view",
          "group": "1_dep@0"
        },
        {
          "command": "dart-support.upgrade-dependencies",
          "when": "view == dart-support-view && viewItem =~ /^file-.*/",
          "group": "1_dep@1"
        },
        {
          "command": "dart-support.upgrade-dependencies-major",
          "when": "view == dart-support-view && viewItem =~ /^file-.*/",
          "group": "1_dep@2"
        },
        {
          "command": "dart-support.clean-build",
          "when": "view == dart-support-view && viewItem =~ /^file-.*/ && viewItem in dart-support.hasBuildRunnerDep",
          "group": "2_br@2"
        },
        {
          "command": "dart-support.open-terminal",
          "when": "view == dart-support-view",
          "group": "0_terminal@0"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "dart-support-view",
          "name": "Dart Support",
          "when": "dart-support.showView"
        }
      ]
    }
  },
  "scripts": {
    "package": "npm run prep && vsce package -o build/",
    "publish": "vsce publish -i build/dart-support-0.0.2.vsix",
    "vscode:prepublish": "npm run -S esbuild-base -- --minify",
    "esbuild-base": "rimraf out && esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "build": "npm run -S esbuild-base -- --sourcemap",
    "watch": "npm run -S esbuild-base -- --sourcemap --watch",
    "test-compile": "tsc -p ./",
    "lint": "eslint src --ext ts"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "^14.14.37",
    "@types/vscode": "^1.61.0",
    "@typescript-eslint/eslint-plugin": "^4.22.0",
    "@typescript-eslint/parser": "^4.22.0",
    "esbuild": "^0.13.12",
    "eslint": "^7.24.0",
    "glob": "^7.1.6",
    "mocha": "^8.3.2",
    "prettier": "^2.2.1",
    "ts-loader": "^8.1.0",
    "typescript": "^4.2.4",
    "vsce": "^1.87.1",
    "vscode-test": "^1.5.2",
    "webpack": "^5.31.2",
    "webpack-cli": "^4.6.0"
  },
  "dependencies": {
    "pidtree": "^0.5.0",
    "yaml": "^1.10.2"
  }
}
